from . import db
from sqlalchemy import Column, Integer, String, DateTime, Date
from sqlalchemy.sql import func


class User(db.Model):
    """Data model for Users"""

    __tablename__ = 'users'

    id = Column(Integer,
                   primary_key=True)
    # autogenerated GUID

    username  = Column()
    # unique string

    first_name = Column()
    # string

    last_name = Column()
    # string
      
    email = Column()
    # string unique

    password_hash = Column()

    salt = Colmn()

    # datecreated (autogenerated)

    # dateupdated (autogenerated)


    @staticmethod
    def from_user(dict):

        return User(
            # taskname=dict['taskname'],
            # taskdifficulty=dict['taskdifficulty'],
            # duedate=dict['duedate']
            )

    def to_user(self):
       """Return object data in easily serializable format"""
       return {
        #    'id'  : self.id,
        #    'taskname': self.taskname,
        #    'taskdifficulty': self.taskdifficulty,
        #    'time_created': self.time_created,
        #    'duedate':self.duedate
       }

class Group(db.Model):


    __tablename__ = 'groups'

    id = Column()
    # GUID

    datecreated = Column

class Group_Users(db.Model):

    __tablename__ = "group_users"

    # userid (from user table)
    # groupid (from group table)

class Messages(db.Model):

    __tablename__ = "messages"

    # GUID
    # groupid
    # senderid
    # content
    # timesnet (auto generated)

class Resources(db.model):

    # GUID
    # type
    # url