from . import db
from sqlalchemy import Column, Integer, String, DateTime, Date
from sqlalchemy.sql import func


class User(db.Model):
    """Data model for Users"""

    __tablename__ = 'users'

    id = Column(Integer, primary_key=True)

    username  = Column(String(64), index=True, unique=True)

    first_name = Column(String(64), index=True)

    last_name = Column(String(64), index=True)
      
    email = Column(String(120), index=True, unique=True)

    password_hash = Column(String(128))

    salt = Column()

    datecreated = Column(DateTime)

    # dateupdated (autogenerated)


    @staticmethod
    def from_user(dict):

        return User(
            id =dict['id'],
            username=dict['username'],
            first_name=dict['first_name'],
            last_name =dict['last_name'],
            email=dict['email'],
            password_hash=dict['password_hast']
            )

    def to_user(self):
       """Return object data in easily serializable format"""
       return {
        #    'id'  : self.id,
        #    'taskname': self.taskname,
        #    'taskdifficulty': self.taskdifficulty,
        #    'time_created': self.time_created,
        #    'duedate':self.duedate
       }



class Group(db.Model):


    __tablename__ = 'groups'

    id = Column()
    # GUID

    datecreated = Column

class Group_Users(db.Model):

    __tablename__ = "group_users"

    # userid (from user table)
    # groupid (from group table)

class Messages(db.Model):

    __tablename__ = "messages"



class Resources(db.model):

    # GUID
    # type
    # url